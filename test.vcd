$date
	Mon Oct 02 14:02:56 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fadd_4_tb $end
$scope module s $end
$var wire 4 ! a [3:0] $end
$var wire 4 " b [3:0] $end
$var wire 1 # cin $end
$var wire 4 $ sum [3:0] $end
$var wire 1 % cout $end
$var wire 1 & c2 $end
$var wire 1 ' c1 $end
$var wire 1 ( c0 $end
$scope module fadd1 $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 # cin $end
$var wire 1 + sum $end
$var wire 1 ( cout $end
$upscope $end
$scope module fadd2 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 ( cin $end
$var wire 1 . sum $end
$var wire 1 ' cout $end
$upscope $end
$scope module fadd3 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 ' cin $end
$var wire 1 1 sum $end
$var wire 1 & cout $end
$upscope $end
$scope module fadd4 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 & cin $end
$var wire 1 4 sum $end
$var wire 1 % cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
bx $
x#
bx "
bx !
$end
#10
04
0%
01
0&
0.
0'
b1 $
1+
0(
1*
0-
00
03
0)
0,
0/
02
0#
b1 "
b0 !
#20
b101 $
11
1'
1-
1,
b11 "
b10 !
#30
14
1.
01
1&
b1010 $
0+
1(
1/
1#
b110 !
#40
04
11
0&
0'
1%
b111 $
1+
0(
0-
10
13
0/
12
0#
b1101 "
b1010 !
#50
14
1'
b1111 $
11
1&
1(
1-
1)
1/
1#
b1111 "
b1111 !
#100
